from py2neo import Graph


data_question_path = "../data/MetaQA/hop-2/query.txt" # path to your question file
data_similar_question_path = "../data/MetaQA/hop-2/similar.txt" # path to the file of similar questions generated by the previous step
data_gold_answer_path = "../data/MetaQA/hop-2/gold_answer.txt" # path to the gold answer file
KN_output_path = "../data/MetaQA/hop-2/result/1.txt" # path to the output file of the KnowledgeNavigator
predict_path = "../data/MetaQA/hop-2/predict-hop.txt" # path to the file of hop number prediction generated by the previous step

bert_input_path = ""  # path to your question file
bert_output_path = "" # path to the result of hop number prediction


llama2_url = "llama2_url"

bert_url_list = {
    "hop_predict": "http://hop_predict/bert_hop_predict/", # url of the hop number prediction model
}

graph = Graph("url",auth=("usrname", "passwd"), name="neo4j") # url of the knowledge graph with neo4j
freebase_url = "freebase_url" # url of the freebase set up with virtuoso


MAX_SIMILAR_QUERY_GENERATION_ROUND = 3 # number of rounds to generate similar questions
SIMILAR_QUERY_GENERATION_COUNT = 2 # number of similar questions to be generated for each question
LLM_RELATION_CHOOSE_NUMBER = 1 # number of relations to be chosen for each entity by LLM

METAQA_ENTITY_RELATION_THRESHOLD = 1 # number of relations to be chosen for each entity after weighted voting
FREEBASE_ENTITY_RELATION_THRESHOLD = 2 

TASK = "METAQA" # "METAQA" or "WEBQSP"
